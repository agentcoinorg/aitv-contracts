name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  FOUNDRY_PROFILE: ci

jobs:
  check:
    strategy:
      fail-fast: true

    name: Foundry project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Read .nvmrc
        run: echo "NVMRC=$(cat .nvmrc)" >> $GITHUB_OUTPUT
        id: nvm

      - name: Setup Node.js
        uses: actions/setup-node@master
        with:
          node-version: '${{ steps.nvm.outputs.NVMRC }}'

      - name: Install Node.js dependencies
        run: yarn

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Show Forge version
        run: |
          forge --version

      - name: Run Forge build
        run: |
          forge build --sizes
        id: build

      - name: Run Forge tests
        run: |
          forge test -vvv
        id: test
        env:
          BASE_RPC_URL: "${{ secrets.BASE_RPC_URL }}"
          BSC_RPC_URL: "${{ secrets.BSC_RPC_URL }}"
          BASE_UNISWAP_ROUTER: "${{ vars.BASE_UNISWAP_ROUTER }}"
          BASE_POOL_MANAGER: "${{ vars.BASE_POOL_MANAGER }}"
          BASE_POSITION_MANAGER: "${{ vars.BASE_POSITION_MANAGER }}"
          BASE_UNIVERSAL_ROUTER: "${{ vars.BASE_UNIVERSAL_ROUTER }}"
          CREATE2_DEPLOYER: "${{ vars.CREATE2_DEPLOYER }}"
          PERMIT2: "${{ vars.PERMIT2 }}"
          WETH: "${{ vars.WETH }}"
          AERODROME_ROUTER: "${{ vars.AERODROME_ROUTER }}"
          PANCAKE_SMART_ROUTER: "${{ vars.PANCAKE_SMART_ROUTER }}"
          PANCAKE_SMART_ROUTER_BSC: "${{ vars.PANCAKE_SMART_ROUTER_BSC }}"
